// type Inference vs declaring type of variable value
// It's better to allow typeScript to infer types and more rarely explictly declare the variable value unless needed.


// typeScript tries to infer the type of variable based of the value assigned to it
// the type always explictly defines the variable string in this case
// so if string didn't exist here, it would automatically assign it the type of string
let firstname = "John";

// this errors out because it's not a string
// firstname = 25;

// by seeing it's a constant, it wouldn't be able to be overriden in a program
const number = 85;

// typeScript infers this is a number
// inference and understanding since that it is a variable that can be overriden.
let numberTwo = 90;


// this would need to be an explict result of number
// so that at anytime a function can be used to get finalResult to be a number
let finalResult: number;

function addNumber(a: number, b: number) {
  return a + b;
}

finalResult = addNumber(10, 15);
